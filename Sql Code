Question 1 : How many times does the average user post?
Solution:
SELECT AVG(post_count) AS average_posts
FROM (
    SELECT user_id, COUNT(*) AS post_count
    FROM photos
    GROUP BY user_id
) user_post_counts;

Question 2 : Find the top 5 most used hashtags.
Solution :
SELECT tag_name, COUNT(*) AS tag_count
FROM tags
JOIN photo_tags ON tags.tag_id = photo_tags.tag_id
GROUP BY tag_name
ORDER BY tag_count DESC
LIMIT 5;

Question 3 : Find users who have liked every single photo on the site.
Solution :
SELECT user_id, username
FROM users
WHERE user_id NOT IN (
    SELECT DISTINCT u.user_id
    FROM users u
    JOIN photos p ON u.user_id = p.user_id
    LEFT JOIN likes l ON p.photo_id = l.photo_id
    WHERE l.user_id IS NULL
);

Question 4 : Retrieve a list of users along with their usernames and the rank of their account creation, ordered by the creation date in ascending order.
Solution : 
SELECT user_id, username, 
       RANK() OVER (ORDER BY creation_date) AS account_creation_rank
FROM users
ORDER BY creation_date;

Question 5 : List the comments made on photos with their comment texts, photo URLs, and usernames of users who posted the comments. Include the comment count for each photo
Solution :
SELECT c.comment_text, p.photo_url, u.username,
       COUNT(*) OVER (PARTITION BY c.photo_id) AS comment_count
FROM comments c
JOIN photos p ON c.photo_id = p.photo_id
JOIN users u ON c.user_id = u.user_id;

Question 6 : For each tag, show the tag name and the number of photos associated with that tag. Rank the tags by the number of photos in descending order.
Solution :
SELECT t.tag_name, COUNT(pt.photo_id) AS photo_count,
       RANK() OVER (ORDER BY COUNT(pt.photo_id) DESC) AS tag_rank
FROM tags t
JOIN photo_tags pt ON t.tag_id = pt.tag_id
GROUP BY t.tag_name
ORDER BY photo_count DESC;

Question 7 : List the usernames of users who have posted photos along with the count of photos they have posted. Rank them by the number of photos in descending order.
Solution :
SELECT u.username, COUNT(p.photo_id) AS photo_count,
       RANK() OVER (ORDER BY COUNT(p.photo_id) DESC) AS user_rank
FROM users u
JOIN photos p ON u.user_id = p.user_id
GROUP BY u.username
ORDER BY photo_count DESC;

Question 8 : Display the username of each user along with the creation date of their first posted photo and the creation date of their next posted photo.
Solution :
WITH UserPhotoDates AS (
    SELECT u.username, 
           MIN(p.creation_date) AS first_post_date,
           LEAD(p.creation_date) OVER (PARTITION BY u.user_id ORDER BY p.creation_date) AS next_post_date
    FROM users u
    LEFT JOIN photos p ON u.user_id = p.user_id
    GROUP BY u.username, p.creation_date
)
SELECT username, first_post_date, next_post_date
FROM UserPhotoDates;

Question 9 : For each comment, show the comment text, the username of the commenter, and the comment text of the previous comment made on the same photo.
Solution :
WITH CommentsWithPrevious AS (
    SELECT c.comment_text,
           u.username AS commenter_username,
           LAG(c.comment_text) OVER (PARTITION BY c.photo_id ORDER BY c.comment_date) AS previous_comment_text
    FROM comments c
    JOIN users u ON c.user_id = u.user_id
)
SELECT comment_text, commenter_username, previous_comment_text
FROM CommentsWithPrevious;

Question 10 :  Show the username of each user along with the number of photos they have posted and the number of photos posted by the user before them and after them, based on the creation date.
Solutiom :
WITH UserPhotoCounts AS (
    SELECT u.username, COUNT(p.photo_id) AS photo_count,
           ROW_NUMBER() OVER (ORDER BY MIN(p.creation_date)) AS user_row
    FROM users u
    LEFT JOIN photos p ON u.user_id = p.user_id
    GROUP BY u.username
),
UserPhotoStats AS (
    SELECT username, photo_count,
           LAG(photo_count) OVER (ORDER BY user_row) AS prev_user_photo_count,
           LEAD(photo_count) OVER (ORDER BY user_row) AS next_user_photo_count
    FROM UserPhotoCounts
)
SELECT username, photo_count, prev_user_photo_count, next_user_photo_count
FROM UserPhotoStats;
